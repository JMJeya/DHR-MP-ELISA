blood.param[1]
col <- colnames(blood.param)
col
col
col[1]
ggplot(fn.cd, aes(x = LDL.HDLratio, y = col[i], color=Category)) +
geom_point() +
geom_smooth(method = lm, se = FALSE) +
scale_y_log10() +
facet_wrap(~Category)
ggplot(fn.cd, aes(x = LDL.HDLratio, y , color=Category)) +
geom_point() +
geom_smooth(method = lm, se = FALSE) +
scale_y_log10() +
facet_wrap(~Category)
cNo <- c(6,7,10:13,15:25)
cNO
cNo
ggplot(fn.cd, aes(x = LDL.HDLratio, y = FN_ng.ml.sMP, color=Category)) +
geom_point() +
geom_smooth(method = lm, se = FALSE) +
scale_y_log10() +
facet_wrap(~Category)
names(blood.param)
fn.cd
names(fn.cd)
ggplot(fn.cd, aes(x = names(fn.cd[23]), y = FN_ng.ml.sMP, color=Category)) +
geom_point() +
geom_smooth(method = lm, se = FALSE) +
scale_y_log10() +
facet_wrap(~Category)
ggplot(fn.cd, aes(x = names(fn.cd[24]), y = FN_ng.ml.sMP, color=Category)) +
geom_point() +
geom_smooth(method = lm, se = FALSE) +
scale_y_log10() +
facet_wrap(~Category)
ggplot(fn.cd, aes(x = LDL.HDLratio, y = FN_ng.ml.sMP, color=Category)) +
geom_point() +
geom_smooth(method = lm, se = FALSE) +
scale_y_log10() +
facet_wrap(~Category)
ggplot(fn.cd, aes(x = Age, y = FN_ng.ml.sMP, color=Category)) +
geom_point() +
geom_smooth(method = lm, se = FALSE) +
scale_y_log10() +
facet_wrap(~Category)
ggplot(fn.cd, aes(x = Sex, y = FN_ng.ml.sMP, color=Category)) +
geom_point() +
geom_smooth(method = lm, se = FALSE) +
scale_y_log10() +
facet_wrap(~Category)
ggplot(fn.cd, aes(x = BMI, y = FN_ng.ml.sMP, color=Category)) +
geom_point() +
geom_smooth(method = lm, se = FALSE) +
scale_y_log10() +
facet_wrap(~Category)
ggplot(fn.cd, aes(x = BP-sys, y = FN_ng.ml.sMP, color=Category)) +
geom_point() +
geom_smooth(method = lm, se = FALSE) +
scale_y_log10() +
facet_wrap(~Category)
ggplot(fn.cd, aes(x = `BP-sys`, y = FN_ng.ml.sMP, color=Category)) +
geom_point() +
geom_smooth(method = lm, se = FALSE) +
scale_y_log10() +
facet_wrap(~Category)
ggplot(fn.cd, aes(x = `BP-dia`, y = FN_ng.ml.sMP, color=Category)) +
geom_point() +
geom_smooth(method = lm, se = FALSE) +
scale_y_log10() +
facet_wrap(~Category)
ggplot(fn.cd, aes(x = HbA1c, y = FN_ng.ml.sMP, color=Category)) +
geom_point() +
geom_smooth(method = lm, se = FALSE) +
scale_y_log10() +
facet_wrap(~Category)
ggplot(fn.cd, aes(x = ESR, y = FN_ng.ml.sMP, color=Category)) +
geom_point() +
geom_smooth(method = lm, se = FALSE) +
scale_y_log10() +
facet_wrap(~Category)
ggplot(fn.cd, aes(x = Hb_gm.dl, y = FN_ng.ml.sMP, color=Category)) +
geom_point() +
geom_smooth(method = lm, se = FALSE) +
scale_y_log10() +
facet_wrap(~Category)
ggplot(fn.cd, aes(x = Urea_mg.dl, y = FN_ng.ml.sMP, color=Category)) +
geom_point() +
geom_smooth(method = lm, se = FALSE) +
scale_y_log10() +
facet_wrap(~Category)
ggplot(fn.cd, aes(x = Creatinine_mg.dl, y = FN_ng.ml.sMP, color=Category)) +
geom_point() +
geom_smooth(method = lm, se = FALSE) +
scale_y_log10() +
facet_wrap(~Category)
ggplot(fn.cd, aes(x = creatinine_mg.dl, y = FN_ng.ml.sMP, color=Category)) +
geom_point() +
geom_smooth(method = lm, se = FALSE) +
scale_y_log10() +
facet_wrap(~Category)
ggplot(fn.cd, aes(x = TCH, y = FN_ng.ml.sMP, color=Category)) +
geom_point() +
geom_smooth(method = lm, se = FALSE) +
scale_y_log10() +
facet_wrap(~Category)
df <- fn.cd %>%
filter(Category == cat[i]) %>%
lm(FN_ng.ml.sMP~TCH, .) %>%
summary()
for (i in 1:nlevels(fn.cd$Category)){
df <- fn.cd %>%
filter(Category == cat[i]) %>%
lm(FN_ng.ml.sMP~TCH, .) %>%
summary()
print(cat[i])
print(df)
}
ggplot(fn.cd, aes(x = HDL_mg.dl, y = FN_ng.ml.sMP, color=Category)) +
geom_point() +
geom_smooth(method = lm, se = FALSE) +
scale_y_log10() +
facet_wrap(~Category)
df <- fn.cd %>%
filter(Category == cat[i]) %>%
lm(FN_ng.ml.sMP~HDL_mg.dl, .) %>%
summary()
for (i in 1:nlevels(fn.cd$Category)){
df <- fn.cd %>%
filter(Category == cat[i]) %>%
lm(FN_ng.ml.sMP~HDL_mg.dl, .) %>%
summary()
print(cat[i])
print(df)
}
ggplot(fn.cd, aes(x = LDL_mg.dl, y = FN_ng.ml.sMP, color=Category)) +
geom_point() +
geom_smooth(method = lm, se = FALSE) +
scale_y_log10() +
facet_wrap(~Category)
ggplot(fn.cd, aes(x = VLDL_mg.dl, y = FN_ng.ml.sMP, color=Category)) +
geom_point() +
geom_smooth(method = lm, se = FALSE) +
scale_y_log10() +
facet_wrap(~Category)
ggplot(fn.cd, aes(x = TCH.HDLratio, y = FN_ng.ml.sMP, color=Category)) +
geom_point() +
geom_smooth(method = lm, se = FALSE) +
scale_y_log10() +
facet_wrap(~Category)
df <- fn.cd %>%
filter(Category == cat[i]) %>%
lm(FN_ng.ml.sMP~TCH.HDLratio, .) %>%
summary()
for (i in 1:nlevels(fn.cd$Category)){
df <- fn.cd %>%
filter(Category == cat[i]) %>%
lm(FN_ng.ml.sMP~TCH.HDLratio, .) %>%
summary()
print(cat[i])
print(df)
}
ggplot(fn.cd, aes(x = LDL.HDLratio, y = FN_ng.ml.sMP, color=Category)) +
geom_point() +
geom_smooth(method = lm, se = FALSE) +
scale_y_log10() +
facet_wrap(~Category)
df <- fn.cd %>%
filter(Category == cat[i]) %>%
lm(FN_ng.ml.sMP~LDL.HDLratio, .) %>%
summary()
for (i in 1:nlevels(fn.cd$Category)){
df <- fn.cd %>%
filter(Category == cat[i]) %>%
lm(FN_ng.ml.sMP~LDL.HDLratio, .) %>%
summary()
print(cat[i])
print(df)
}
ggplot(fn.cd, aes(x = CRP, y = FN_ng.ml.sMP, color=Category)) +
geom_point() +
geom_smooth(method = lm, se = FALSE) +
scale_y_log10() +
facet_wrap(~Category)
ggplot(fn.cd, aes(x = CRP_mg.l, y = FN_ng.ml.sMP, color=Category)) +
geom_point() +
geom_smooth(method = lm, se = FALSE) +
scale_y_log10() +
facet_wrap(~Category)
df <- fn.cd %>%
filter(Category == cat[i]) %>%
lm(FN_ng.ml.CRP_mg.l, .) %>%
summary()
for (i in 1:nlevels(fn.cd$Category)){
df <- fn.cd %>%
filter(Category == cat[i]) %>%
lm(FN_ng.ml.CRP_mg.l, .) %>%
summary()
print(cat[i])
print(df)
}
df <- fn.cd %>%
filter(Category == cat[i]) %>%
lm(FN_ng.ml.~CRP_mg.l, .) %>%
summary()
df <- fn.cd %>%
filter(Category == cat[i]) %>%
lm(FN_ng.ml.MP~CRP_mg.l, .) %>%
summary()
for (i in 1:nlevels(fn.cd$Category)){
df <- fn.cd %>%
filter(Category == cat[i]) %>%
lm(FN_ng.ml.sMP~CRP_mg.l, .) %>%
summary()
print(cat[i])
print(df)
}
ggplot(fn.cd, aes(x = microAlb_mg.l, y = FN_ng.ml.sMP, color=Category)) +
geom_point() +
geom_smooth(method = lm, se = FALSE) +
scale_y_log10() +
facet_wrap(~Category)
df <- fn.cd %>%
filter(Category == cat[i]) %>%
lm(FN_ng.ml.sMP~microAlb_mg.l, .) %>%
summary()
for (i in 1:nlevels(fn.cd$Category)){
df <- fn.cd %>%
filter(Category == cat[i]) %>%
lm(FN_ng.ml.sMP~microAlb_mg.l, .) %>%
summary()
print(cat[i])
print(df)
}
for (i in 1:nlevels(fn.cd$Category)){
df <- fn.cd %>%
filter(Category == cat[i]) %>%
lm(FN_ng.ml.sMP~TCH, .) %>%
summary()
print(cat[i])
print(df)
}
for (i in 1:nlevels(fn.cd$Category)){
df <- fn.cd %>%
filter(Category == cat[i]) %>%
lm(FN_ng.ml.sMP~microAlb_mg.l, .) %>%
summary()
print(cat[i])
print(df)
}
for (i in 1:nlevels(fn.cd$Category)){
df <- fn.cd %>%
filter(Category == cat[i]) %>%
lm(FN_ng.ml.sMP~log(microAlb_mg.l), .) %>%
summary()
print(cat[i])
print(df)
}
df <- fn.cd %>%
filter(Category == cat[i]) %>%
lm(FN_ng.ml.sMP~microAlb_mg.l, .) %>%
summary()
for (i in 1:nlevels(fn.cd$Category)){
df <- fn.cd %>%
filter(Category == cat[i]) %>%
lm(FN_ng.ml.sMP~microAlb_mg.l, .) %>%
summary()
print(cat[i])
print(df)
}
for (i in 1:nlevels(fn.cd$Category)){
df <- fn.cd %>%
filter(Category == cat[i]) %>%
lm(FN_ng.ml.sMP~log10(microAlb_mg.l), .) %>%
summary()
print(cat[i])
print(df)
}
for (i in 1:nlevels(fn.cd$Category)){
df <- fn.cd %>%
filter(Category == cat[i]) %>%
lm(log10(FN_ng.ml.sMP)~microAlb_mg.l, .) %>%
summary()
print(cat[i])
print(df)
}
for (i in 1:nlevels(fn.cd$Category)){
df <- fn.cd %>%
filter(Category == cat[i]) %>%
lm(log10(FN_ng.ml.sMP)~microAlb_mg.l, .) %>%
summary()
print(cat[i])
print(df)
}
library("caret")
install.packages("caret")
library("corrplot")
install.packages("caret")
install.packages("caret")
install.packages("caret")
install.packages("caret")
install.packages("caret")
View(test.corr)
library("tidyverse")
library("ggplot2")
library("Hmisc")
library("corrplot")
library("caret")
CD_full <- read.csv("./MP_CLINICAL\ DATA.csv", header = TRUE, stringsAsFactors = FALSE)
CD_full
dir()
a2m <- read.csv("./A2M.csv", stringsAsFactors = FALSE)
colnames(a2m) <- c("S.ID", "Category", "A2M_ng.ml.sMP")
a2m$Category <- as.factor(a2m$Category)
a2m
cd41 <- read.csv("./CD41-61.csv", stringsAsFactors = FALSE)
colnames(cd41) <- c("Category", "S.ID", "CD41_ng.ml.sMP")
cd41$Category <- as.factor(cd41$Category)
cd41$CD41_ng.ml.sMP <- round(cd41$CD41_ng.ml.sMP, digits = 2)
cd41
fn <- read.csv("./FN.csv", stringsAsFactors = FALSE)
colnames(fn) <- c("Category", "S.ID", "FN_ng.ml.sMP")
fn$Category <- as.factor(fn$Category)
fn$FN_ng.ml.sMP <- round(fn$FN_ng.ml.sMP, digits = 2)
fn
CD <- CD_full[ ,c(1:2, 24:25, 29:30, 39:40, 55:70)]
colnames(CD)[c(1:2, 6:24)] <- c("S.ID", "Category", "BP", "diabDuration", "diabTreatment", "HbA1c", "ESR", "Hb_gm.dl", "Glucose_mg.dl", "R.F.PP", "Urea_mg.dl", "creatinine_mg.dl", "TCH", "TC_mg.dl", "HDL_mg.dl", "LDL_mg.dl", "VLDL_mg.dl", "TCH.HDLratio", "LDL.HDLratio", "CRP_mg.l", "microAlb_mg.l" )
colnames(CD)
CD_full
CD
CD$Category <- as.factor(CD$Category)
CD$Sex <- as.factor(CD$Sex)
unique(CD$diabTreatment)
CD <- CD %>%
mutate(diabDuration = str_replace_all(diabDuration, c("No"="0", "Yrs" = ""))) %>%
mutate(diabDuration = as.integer(diabDuration)) %>%
mutate(Category = str_replace(Category, "PDR ", "PDR")) %>%
separate(BP, sep = "/", into = c("BP-sys", "BP-dia"), remove = TRUE)
CD
# Combine A2M values with clinical data
a2m.cd <- left_join(CD,
a2m %>% dplyr::select(S.ID, A2M_ng.ml.sMP),
by = "S.ID")
a2m
a2m.cd
# Combine CD41-61 values with clinical data
cd41.cd <- left_join(CD,
cd41 %>% dplyr::select(S.ID, CD41_ng.ml.sMP),
by = "S.ID")
cd41
cd41.cd
# Combine FN values with clinical data
fn.cd <- left_join(CD,
fn %>% select(S.ID, FN_ng.ml.sMP),
by = "S.ID")
fn
fn.cd
# Combine A2M, CD41-61, FN values with clinical data
CD_ACF <- CD %>%
full_join(a2m, by = "S.ID") %>%
full_join(cd41, by = "S.ID") %>%
full_join(fn, by = "S.ID") %>%
select(-c("Category.y", "Category.x.x","Category.y.y"))
colnames(CD_ACF)
write.csv(CD_ACF, "CD_ACF_all.csv")
CD_ACF_com <- CD %>%
inner_join(a2m, by = "S.ID") %>%
inner_join(cd41, by = "S.ID") %>%
inner_join(fn, by = "S.ID") %>%
select(-c("Category.y", "Category.x.x","Category.y.y"))
colnames(CD_ACF_com)
write.csv(CD_ACF_com, "CD_ACF_com.csv")
colnames(fn.cd)
fn.data <- fn.cd %>%
mutate_at(vars(starts_with("BP-")), funs(as.numeric)) %>%
select(c("BP-sys", "BP-dia", "HbA1c", "ESR", "HbA1c", "Glucose_mg.dl", "Urea_mg.dl", "creatinine_mg.dl", "TCH", "TC_mg.dl", "HDL_mg.dl", "LDL_mg.dl", "VLDL_mg.dl", "TCH.HDLratio", "LDL.HDLratio", "CRP_mg.l", "microAlb_mg.l", "FN_ng.ml.sMP")) %>%
drop_na()
## Find the correlation between all numerical data
fn.data
fn.corr <- cor(fn.data)
corrplot(fn.corr)
fn.corr
## Linear regression between FN values and LDL-HDL ratio
fn.lhratio <- (lm(FN_ng.ml.sMP~LDL.HDLratio, fn.cd))
## Visualizing regression between FN values and LDL-HDL ratio - ALL VALUES
ggplot(fn.cd, aes(x = LDL.HDLratio, y = FN_ng.ml.sMP, color=Category)) +
geom_point() +
geom_smooth(method = lm, se = FALSE) +
scale_y_log10()
## Visualizing regression between FN values and LDL-HDL ratio - INDIVIDUAL CATEGORIES
ggplot(fn.cd, aes(x = LDL.HDLratio, y = FN_ng.ml.sMP, color=Category)) +
geom_point() +
geom_smooth(method = lm, se = FALSE) +
scale_y_log10() +
facet_wrap(~Category)
## Print out the LM statisitics category wise using a for loop
fn.cd <- fn.cd %>%
mutate(Category = as.factor(Category))
nlevels(fn.cd$Category) ## determines the number of levels in a variable but must be a factor
cat <- unique(fn.cd$Category) ## stores the different levels as a character vector
## Loop to display the summary of linear regression model based on sample category
for (i in 1:nlevels(fn.cd$Category)){
df <- fn.cd %>%
filter(Category == cat[i]) %>%
lm(FN_ng.ml.sMP~LDL.HDLratio, .) %>%
summary()
print(cat[i])
print(df)
}
## Linear regression between FN values and LDL-HDL ratio
fn.lhratio <- (lm(FN_ng.ml.sMP~LDL.HDLratio, fn.cd))
## Visualizing regression between FN values and LDL-HDL ratio - ALL VALUES
ggplot(fn.cd, aes(x = LDL.HDLratio, y = FN_ng.ml.sMP, color=Category)) +
geom_point() +
geom_smooth(method = lm, se = FALSE) +
scale_y_log10()
## Visualizing regression between FN values and LDL-HDL ratio - INDIVIDUAL CATEGORIES
ggplot(fn.cd, aes(x = LDL.HDLratio, y = FN_ng.ml.sMP, color=Category)) +
geom_point() +
geom_smooth(method = lm, se = FALSE) +
scale_y_log10() +
facet_wrap(~Category)
## Print out the LM statisitics category wise using a for loop
fn.cd <- fn.cd %>%
mutate(Category = as.factor(Category))
nlevels(fn.cd$Category) ## determines the number of levels in a variable but must be a factor
cat <- unique(fn.cd$Category) ## stores the different levels as a character vector
## Loop to display the summary of linear regression model based on sample category
for (i in 1:nlevels(fn.cd$Category)){
df <- fn.cd %>%
filter(Category == cat[i]) %>%
lm(log10(FN_ng.ml.sMP)~microAlb_mg.l, .) %>%
summary()
print(cat[i])
print(df)
}
ggplot(fn.cd, aes(x = microAlb_mg.l, y = FN_ng.ml.sMP, color=Category)) +
geom_point() +
geom_smooth(method = lm, se = FALSE) +
scale_y_log10() +
facet_wrap(~Category)
fn.cd
pwd()
getwd()
getwd()
setwd("G:/GITHUB/DHR-MP-ELISA")
getwd()
ls
dir()
library(tidyverse)
library(caret)
library(ggplot2)
write.csv(CD_ACF, "CD_ACF_all.csv")
data <- read.csv("./CD_ACF_all.csv")
data
str(data)
ggplot(data, aes(x = Urea_mg.dl, y = FN_ng.ml.sMP)) +
geom_point() +
stat_smooth()
ggplot(data, aes(x = Urea_mg.dl, y = FN_ng.ml.sMP)) +
geom_point() +
stat_smooth() +
facet_wrap(~category)
ggplot(data, aes(x = Urea_mg.dl, y = FN_ng.ml.sMP)) +
geom_point() +
stat_smooth() +
facet_wrap(~Category)
ggplot(data, aes(x = Urea_mg.dl, y = FN_ng.ml.sMP, color = Category)) +
geom_point() +
stat_smooth() +
facet_wrap(~Category)
ggplot(data, aes(x = microAlb_mg.l, y = FN_ng.ml.sMP, color=Category)) +
geom_point() +
geom_smooth(method = lm, se = FALSE) +
scale_y_log10() +
facet_wrap(~Category)
ggplot(data, aes(x = Urea_mg.dl, y = FN_ng.ml.sMP, color = Category)) +
geom_point() +
facet_wrap(~Category)
ggplot(data, aes(x = Urea_mg.dl, y = FN_ng.ml.sMP)) +
geom_point() +
facet_wrap(~Category.x)
ggplot(data, aes(x = Urea_mg.dl, y = FN_ng.ml.sMP)) +
geom_point() +
stat_smooth() +
facet_wrap(~Category.x)
ggplot(data, aes(x = Urea_mg.dl, y = FN_ng.ml.sMP)) +
geom_point() +
stat_smooth() +
facet_wrap(~Category.x) +
scale_y_log10()
ggplot(data, aes(x = Urea_mg.dl, y = FN_ng.ml.sMP)) +
geom_point() +
stat_smooth() +
facet_wrap(~Category.x) +
scale_y_log2()
ggplot(data, aes(x = Urea_mg.dl, y = FN_ng.ml.sMP)) +
geom_point() +
stat_smooth() +
facet_wrap(~Category.x) +
scale_y_continuous(trans = 'log2')
ggplot(data, aes(x = Urea_mg.dl, y = FN_ng.ml.sMP)) +
geom_point() +
stat_smooth() +
facet_wrap(~Category.x)
+
scale_y_continuous(trans = 'log2')
ggplot(data, aes(x = Urea_mg.dl, y = FN_ng.ml.sMP)) +
geom_point() +
stat_smooth() +
facet_wrap(~Category.x) +
scale_y_continuous(trans = 'log2')
